// <auto-generated />
using System;
using Infraestructura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructura.Migrations
{
    [DbContext(typeof(WatchFactoryDbContext))]
    [Migration("20230111203155_Relaciones_DB")]
    partial class RelacionesDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dominio.Modelos.Configuracion.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.EstadoIntervencion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoIntervenciones");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.Fabrica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fabricas");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.LineaProduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FabricaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FabricaID");

                    b.ToTable("Lineas");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineaProduccionID")
                        .HasColumnType("int");

                    b.Property<int>("TipoMaquinaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LineaProduccionID");

                    b.HasIndex("TipoMaquinaID");

                    b.ToTable("Maquinas");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.TipoIntervencion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoIntervenciones");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.TipoMaquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoMaquinas");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.Urgencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Urgencias");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zonas");
                });

            modelBuilder.Entity("Dominio.Modelos.Intervencion.Intervencion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoIntervencionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketID")
                        .HasColumnType("int");

                    b.Property<int>("TipoIntervencionID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoIntervencionID");

                    b.HasIndex("TicketID");

                    b.HasIndex("TipoIntervencionID");

                    b.ToTable("Intervenciones");
                });

            modelBuilder.Entity("Dominio.Modelos.Nucleo.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaquinaID")
                        .HasColumnType("int");

                    b.Property<int>("UrgenciaID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int>("ZonaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("MaquinaID");

                    b.HasIndex("UrgenciaID");

                    b.HasIndex("UsuarioID");

                    b.HasIndex("ZonaID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Dominio.Modelos.Usuarios.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("Dominio.Modelos.Usuarios.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eliminado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Dominio.Modelos.Usuarios.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("passwodrHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.Property<int>("PermisosId")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("PermisosId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("PermisoRol");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("RolesId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("RolUsuario");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.LineaProduccion", b =>
                {
                    b.HasOne("Dominio.Modelos.Configuracion.Fabrica", "Fabrica")
                        .WithMany("Lineas")
                        .HasForeignKey("FabricaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabrica");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.Maquina", b =>
                {
                    b.HasOne("Dominio.Modelos.Configuracion.LineaProduccion", "LineaProduccion")
                        .WithMany("Maquinas")
                        .HasForeignKey("LineaProduccionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Modelos.Configuracion.TipoMaquina", "TipoMaquina")
                        .WithMany("Maquinas")
                        .HasForeignKey("TipoMaquinaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LineaProduccion");

                    b.Navigation("TipoMaquina");
                });

            modelBuilder.Entity("Dominio.Modelos.Intervencion.Intervencion", b =>
                {
                    b.HasOne("Dominio.Modelos.Configuracion.EstadoIntervencion", "EstadoIntervencion")
                        .WithMany("Intervenciones")
                        .HasForeignKey("EstadoIntervencionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Modelos.Nucleo.Ticket", "Ticket")
                        .WithMany("Intervenciones")
                        .HasForeignKey("TicketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Modelos.Configuracion.TipoIntervencion", "TipoIntervencion")
                        .WithMany("Intervenciones")
                        .HasForeignKey("TipoIntervencionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoIntervencion");

                    b.Navigation("Ticket");

                    b.Navigation("TipoIntervencion");
                });

            modelBuilder.Entity("Dominio.Modelos.Nucleo.Ticket", b =>
                {
                    b.HasOne("Dominio.Modelos.Configuracion.Categoria", "Categoria")
                        .WithMany("Tickets")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Modelos.Configuracion.Maquina", "Maquina")
                        .WithMany("Tickets")
                        .HasForeignKey("MaquinaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Modelos.Configuracion.Urgencia", "Urgencia")
                        .WithMany("Tickets")
                        .HasForeignKey("UrgenciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Modelos.Usuarios.Usuario", "Usuario")
                        .WithMany("Tickets")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Modelos.Configuracion.Zona", "Zona")
                        .WithMany("Tickets")
                        .HasForeignKey("ZonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Maquina");

                    b.Navigation("Urgencia");

                    b.Navigation("Usuario");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.HasOne("Dominio.Modelos.Usuarios.Permiso", null)
                        .WithMany()
                        .HasForeignKey("PermisosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Modelos.Usuarios.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.HasOne("Dominio.Modelos.Usuarios.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Modelos.Usuarios.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.Categoria", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.EstadoIntervencion", b =>
                {
                    b.Navigation("Intervenciones");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.Fabrica", b =>
                {
                    b.Navigation("Lineas");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.LineaProduccion", b =>
                {
                    b.Navigation("Maquinas");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.Maquina", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.TipoIntervencion", b =>
                {
                    b.Navigation("Intervenciones");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.TipoMaquina", b =>
                {
                    b.Navigation("Maquinas");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.Urgencia", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Dominio.Modelos.Configuracion.Zona", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Dominio.Modelos.Nucleo.Ticket", b =>
                {
                    b.Navigation("Intervenciones");
                });

            modelBuilder.Entity("Dominio.Modelos.Usuarios.Usuario", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
