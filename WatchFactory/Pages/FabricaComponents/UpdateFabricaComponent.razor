@page "/fabrica/{id:int}"
@attribute [Authorize(Policy = "AdminPolicy")]
@inject IFabricaServicePages FabricaService
@inject NavigationManager NavigationManager

<PageTitle>Actualizar una Fabrica</PageTitle>
<h3>Actualizar Fabrica</h3>

<EditForm Model="Dto" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />

    <div>
        <label for="descripcion">Descripcion</label>
        <InputText id="descripcion" class="form-control" @bind-Value="Dto.Descripcion"></InputText>
    </div>
        <button type="submit" class="btn btn-primary">Actualizar</button>
        <button type="button" class="btn btn-danger" @onclick="DeleteSubmit">Eliminar</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    UpdateFabricaDto Dto = new UpdateFabricaDto();

    protected override async Task OnParametersSetAsync()
    {
        var fabrica = await FabricaService.GetFabricaById((int)Id);
        Dto.Descripcion = fabrica.Descripcion;
    }

    async Task HandleSubmit()
    {
        await FabricaService.UpdateFabrica((int)Id, Dto);
        NavigationManager.NavigateTo("/fabricas");
    }

    async Task DeleteSubmit()
    {
        await FabricaService.DeleteFabricaById((int)Id);
        NavigationManager.NavigateTo("/fabricas");
    }
}
